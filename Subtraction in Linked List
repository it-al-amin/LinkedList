//You are required to complete this method

Node* subLinkedList(Node* l1, Node* l2)
{
    //Your code here
    string x1="",x2="";
    Node* temp=l1;
    bool f=0;
    while(temp!=NULL)
    {
        if(temp->data)
        {
            f=1;
        }
        if(f){
        x1+=temp->data+'0';
        }
        temp=temp->next;
    }
    temp=l2;
    f=0;
    while(temp!=NULL)
    {
        if(temp->data)
        {
            f=1;
        }
        if(f){
        x2+=temp->data+'0';
        }
        temp=temp->next;
    }
    if(x1.size()==x2.size())
    {
        for(int i=0;i<x1.size();i++)
        {
            if(x1[i]<x2[i])
            {
                swap(x1,x2);
                break;
            }
            if(x1[i]>x2[i])
            {
                break;
            }
        }
    }
    if(x2.size()>x1.size())
    {
        swap(x1,x2);
    }
   int i = x1.size() - 1, j = x2.size() - 1;
    string x = "";
    int car = 0;

    while (j >= 0) {
        if (i >= 0 && x1[i] - '0' - car >= x2[j] - '0') {
            x += (x1[i] - '0' - car - (x2[j] - '0')) + '0';
            car = 0;
        } else {
            x += (10 + x1[i] - '0' - car - (x2[j] - '0')) + '0';
            car = 1;
        }
        j--;
        i--;
        //cout<<x<< " ";
    }

    while (i >= 0) {
        if (x1[i] - '0' - car >= 0) {
            x += (x1[i] - '0' - car) + '0';
            car = 0;
        } else {
            x += (10 + x1[i] - '0' - car) + '0';
            car = 1;
        }
        i--;
      }
      for(i=x.size()-1;i>=0;i--)
      {
          if(x[i]!='0')
          {
              break;
          }
      }
      //cout<<x1<<"\n";
      //cout<<x2<<"\n";
      //cout<<x<<"\n";
     temp=NULL;
     Node* head=temp;
     if(i==-1)//subtraction is 0 iff
     {
        head=new Node(0);
        return head;
     }
      for(j=0;j<=i;j++)//Insert at Head and store in reverse order 
      {
          //cout<<x[j]<<" ";
          head=new Node(x[j]-'0');
          head->next=temp;
          temp=head;
      }
      //cout<<endl;
    
    
    return head;
}
